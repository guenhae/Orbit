//	This code copyright (c) by the Grail project.
//	No commercial use permitted without written consent. 
//	February 1993

// *************************************************
// MH 98/09/09  This code does not appear to be used
// *************************************************

template <class Label>
void
fm<Label>::reachable_states(set<state>& s) const
{
	set<state> wave;
	state final;

	wave = start_states;
	final.final();

	s.clear();
	s = wave;

	for (;;)
	{
		// find all targets reachable in one instruction

		set<state>		targets;
		set<state>		temp2;
		fm<Label>		temp;

		targets.clear();

		for (int i=0; i<wave.size(); ++i)
		{
			select(wave[i], SOURCE, temp);
			targets += temp.sinks(temp2);
		}

		// remove the final state from the set

		targets -= final;

		// if we've found new states, they will be used on
		// the next iteration

		i = s.size();
		s += targets;
		if (s.size() == i)
			break;
		targets -= wave;
		wave = targets;
	}
}
